##
# "BlogFeed" layout
# We clear the prototype of the BlogFeed so we don't have inherited
# properties we don't want and would be contained in the output.
#
prototype(Shel.Blog:BlogFeed) >
prototype(Shel.Blog:BlogFeed) < prototype(TYPO3.TypoScript:Http.Message) {
	httpResponseHead {
		headers.Content-Type = 'application/xml'
	}

	doctype = '<?xml version="1.0" encoding="utf-8"?>'
	doctype.@position = 'start 100'

	feed = Shel.Blog:BlogFeedContent {
		@position = 'after doctype'
	}
}

##
# Html version of the blog feed
# It's just for rendering the primary content part and not the whole page.
# This way it will integrate easily into an existing layout.
#
prototype(Shel.Blog:BlogFeedHtml) < prototype(Shel.Blog:BlogFeedContent)

##
# Add a condition to render the primary content differently if we show a blog feed
#
prototype(PrimaryContent).BlogFeed {
	condition = ${q(node).is('[instanceof Shel.Blog:BlogFeed]')}
	type = 'Shel.Blog:BlogFeedHtml'
}

##
# Calling a page with the format .atom will automatically call the xml based layout
#
atom = Shel.Blog:BlogFeed
