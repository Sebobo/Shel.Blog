##
# This is the content part of our blogfeed.
# It's used for the xml and the normal html output, just uses different templates for the two cases.
#
prototype(Shel.Blog:BlogFeedContent) < prototype(Content) {
	configuration = ${Configuration.setting('Shel.Blog')}

	# Make some properties of the node directly accessible in the template to allow inline editing and reduce code.
	title = ${node.properties.title}
	description = ${node.properties.description}
	authorName = ${node.properties.authorName}
	limit = ${node.properties.limit}
	sourceNode = ${node.properties.sourceNode ? node.properties.sourceNode : site}
	sortingDirection = ${node.properties.sortingDirection}
	requestArguments = ${request.pluginArguments}

	# Fetch feed entries
	feedEntries = ${this.sourceNode ? q(this.sourceNode).find('[instanceof Shel.Blog:BlogEntry]').get() : []}
	feedEntries.@process.sort = ${this.sortingDirection == 'descending' ? Array.reverse(value) : value}
	feedEntries.@process.slice = ${this.limit ? Array.slice(value, 0, this.limit) : value}

	# Setup source node to retrieve blog posts from
	lastUpdatedNode = ${feedEntries[0]}

	# Select the template depending on the requested format
	templatePath = ${'resource://Shel.Blog/Private/Templates/Content/BlogFeed.' + request.format}
	attributes.class = 'blog-feed'
	sectionName = 'feed'

	# Can be used to add attributes to the list containing the entries in the feed
	listAttributes = TYPO3.TypoScript:Attributes

	entryRenderer = Shel.Blog:BlogEntry {
		templatePath = ${'resource://Shel.Blog/Private/Templates/TypoScriptObjects/BlogFeedEntry.' + request.format}
		attributes.class = 'blog-feed-entry'
		sectionName = 'blogFeedEntry'
	}

	@context {
		entryRenderer = ${this.entryRenderer}
		feedEntries = ${this.feedEntries}
	}

	@cache {
		mode = 'cached'
		entryIdentifier {
			format = ${request.format}
			paginationArgument = ${request.pluginArguments['blog-pagination'].currentPage}
			node = ${node}
		}
		// Flush the blog feed when a blog entry is changed
		entryTags.1 = 'NodeType_Shel.Blog:BlogEntry'
	}
}

prototype(TYPO3.Neos:Page).@cache.entryIdentifier.paginationArgument = ${request.pluginArguments['blog-pagination'].currentPage}
root.@cache.entryIdentifier.paginationArgument = ${request.pluginArguments['blog-pagination'].currentPage}
