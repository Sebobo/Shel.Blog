##
# Extend page type with an additional header data
#
prototype(Neos.Neos:Page) {
    @context {
        isBlogEntry = ${q(documentNode).is('[instanceof Shel.Blog:BlogEntry]')}
        isBlogFeed = ${q(documentNode).is('[instanceof Shel.Blog:BlogFeed]') && request.format == 'html'}
        currentBlogPage = ${String.toInteger(request.pluginArguments['blog-pagination'].currentPage || 1)}
    }

    head {
        feedLinks = Neos.Fusion:Collection {
            collection = ${q(site).find('[instanceof Shel.Blog:BlogFeed]')}
            itemName = 'feed'
            iterationName = 'iteration'
            itemRenderer = Neos.Fusion:Tag {
                tagName = 'link'
                attributes {
                    rel = 'alternate'
                    type = 'application/atom+xml'
                    title = ${feed.properties.title}
                    href = Neos.Neos:NodeUri {
                        node = ${feed}
                        absolute = true
                        format = 'atom'
                    }
                }
            }

            @cache {
                mode = 'cached'
                entryIdentifier {
                    identifier = 'rss-links'
                    workspace = ${node.context.workspace.name}
                }
                entryTags.1 = 'NodeType_Shel.Blog:BlogFeed'
            }
        }

        canonicalLink.attributes.href {
            additionalParams = Neos.Fusion:RawArray {
                '--blog-pagination' = ${{'currentPage': currentBlogPage}}
                '--blog-pagination'.@if.notFirstPage = ${currentBlogPage > 1}
            }
        }

        nextBlogPageLink = Neos.Fusion:Tag {
            tagName = 'link'
            itemsPerPage = ${Configuration.setting('Shel.Blog').pagination.itemsPerPage}
            @context.maxNumberOfPages = ${Math.ceil(q(documentNode).children().count() / this.itemsPerPage)}
            attributes {
                rel = 'next'
                href = Neos.Neos:NodeUri {
                    node = ${documentNode}
                    absolute = true
                    additionalParams = Neos.Fusion:RawArray {
                        '--blog-pagination' = ${{'currentPage': currentBlogPage + 1}}
                    }
                }
            }
            @if.isBlogFeed = ${isBlogFeed}
            @if.notLastPage = ${currentBlogPage < maxNumberOfPages}
        }

        previousBlogPageLink = Neos.Fusion:Tag {
            tagName = 'link'
            attributes {
                rel = 'prev'
                href = Neos.Neos:NodeUri {
                    node = ${documentNode}
                    absolute = true
                    additionalParams = Neos.Fusion:RawArray {
                        '--blog-pagination' = ${{'currentPage': currentBlogPage - 1}}
                    }
                }
            }
            @if.isBlogFeed = ${isBlogFeed}
            @if.notFirstPage = ${currentBlogPage > 1}
        }

        ampLink = Neos.Fusion:Tag {
            tagName = 'link'
            attributes {
                rel = 'amphtml'
                href = Neos.Neos:NodeUri {
                    node = ${documentNode}
                    absolute = true
                    additionalParams = ${{'--blog-amplify': true}}
                }
            }
            @if.isBlogEntry = ${isBlogEntry}
            @if.notAmp = ${blogAmpVersion != true}
        }

        blogMicroData = Shel.Blog:MicroData {
            @if.isBlogEntry = ${isBlogEntry}
        }
    }
}
