##
# "BlogEntry" layout
#
prototype(Shel.Blog:BlogEntry) < prototype(Content) {
    templatePath = 'resource://Shel.Blog/Private/Templates/Content/BlogEntry.html'
    partialRootPath = 'resource://Shel.Blog/Private/Templates/Partials'
    attributes.class = 'blog-entry'
    sectionName = 'blogEntry'
    settings = ${Configuration.setting('Shel.Blog')}
    @context.settings = ${this.settings}

    cldrFormat = ${this.settings.cldrFormat}
    localeFormatLength = ${this.settings.localeFormatLength}
    publicationDate = ${q(node).property('publicationDate')}
    publicationDate.@process.fallback = ${value != '' && value != null ? value : q(node).property('_lastPublicationDateTime')}

    showAuthor = ${this.settings.showAuthor}

    firstTextNode = ${q(node).children('main').find('[instanceof Neos.NodeTypes:Text]').get(0)}
    summary = ${this.entrySummary != '' && this.entrySummary != null ? this.entrySummary  : (this.firstTextNode ? q(this.firstTextNode).property('text') : '')}
    summary.@process {
        stripTags = ${String.stripTags(value)}
        crop = ${String.crop(value, 200, 'â€¦')}
    }

    pagerArguments = Neos.Fusion:RawArray {
        '--blog-amplify' = true
        @if.amp = ${blogAmpVersion == true}
    }

    entryUrl = NodeUri {
        node = ${node}
        absolute = true
    }

    content = ContentCollection {
        attributes.class = 'blog-entry__content'
        nodePath = 'main'
    }

    # Image settings
    imageSettings = Neos.Fusion:RawArray {
        class = 'blog-entry-image'
        width = 150
        height = 150
        cropping = false
        upScaling = false
    }

    disqus = Neos.Fusion:Template {
        templatePath = 'resource://Shel.Blog/Private/Templates/FusionObjects/Disqus.html'
        settings = ${settings}
        node = ${node}
        @if.notAmp = ${blogAmpVersion != true}
    }

    // Links to previous and next blog entries
    previousEntry = ${q(node).prev('[instanceof Shel.Blog:BlogEntry]').get(0)}
    nextEntry = ${q(node).next('[instanceof Shel.Blog:BlogEntry]').get(0)}
}

##
# Add a condition to render the primary content differently if we show a blog entry
#
prototype(PrimaryContent).BlogEntry {
    condition = ${q(node).is('[instanceof Shel.Blog:BlogEntry]')}
    type = 'Shel.Blog:BlogEntry'
}
