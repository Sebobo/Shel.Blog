##
# "BlogEntry" layout
#
prototype(Shel.Blog:BlogEntryContent) < prototype(Neos.Neos:Content) {
    templatePath = 'resource://Shel.Blog/Private/Templates/Content/BlogEntry.html'
    partialRootPath = 'resource://Shel.Blog/Private/Templates/Partials'
    attributes.class = 'blog-entry'
    sectionName = 'blogEntry'
    settings = ${Configuration.setting('Shel.Blog')}
    @context.settings = ${this.settings}

    documentNode = ${documentNode}

    cldrFormat = ${this.settings.cldrFormat}
    localeFormatLength = ${this.settings.localeFormatLength}
    publicationDate = ${q(node).property('publicationDate')}
    publicationDate.@process.fallback = ${value != '' && value != null ? value : q(node).property('_lastPublicationDateTime')}
    categories = ${q(node).property('categories') || []}
    @context.categories = ${this.categories}

    showAuthor = ${this.settings.showAuthor}
    authorName = ${q(node).property('authorName')}

    title = ${q(node).property('title')}
    entrySummary = ${q(node).property('entrySummary')}

    firstTextNode = ${q(node).children('main').find('[instanceof Neos.NodeTypes:Text]').get(0)}
    summary = ${this.entrySummary != '' && this.entrySummary != null ? this.entrySummary  : (this.firstTextNode ? q(this.firstTextNode).property('text') : '')}
    summary.@process {
        stripTags = ${String.stripTags(value)}
        crop = ${String.crop(value, 200, 'â€¦')}
    }

    entryUrl = Neos.Neos:NodeUri {
        node = ${node}
        absolute = true
        format = 'html'
    }
    @context.entryUrl = ${this.entryUrl}

    pagerArguments = Neos.Fusion:Case {
        default.condition = ${true}
        default.renderer = ${[]}
        default.@position = 'end'

        amp.condition = ${blogAmpVersion == true}
        amp.renderer = Neos.Fusion:DataStructure {
            '--blog-amplify' = true
        }
    }

    content = Neos.Neos:ContentCollection {
        attributes.class = 'blog-entry__content'
        nodePath = 'main'
    }

    imageSettings = Neos.Fusion:DataStructure {
        class = 'blog-entry-image'
        width = 150
        height = 150
        cropping = false
        upScaling = false
    }

    socialButtons = Shel.Blog:SocialButtons {
        title = ${q(node).property('title')}
        entryUrl = ${entryUrl}
    }

    disqus = Shel.Blog:Disqus {
        identifier = ${node.identifier}
        title = ${q(node).property('title')}
        entryUrl = ${entryUrl}
        @if.notAmp = ${blogAmpVersion != true}
    }

    categoryList = Neos.Fusion:Component {
        categories = ${categories}
        label = ${I18n.translate('Shel.Blog:Main:categories.label')}

        renderer = afx`
            <span class="blog-entry__categories">
                <span class="blog-entry__categories-label">{props.label}</span>
                <Neos.Fusion:Loop items={props.categories} itemName="category" @children="itemRenderer">
                    <span class="blog-entry__categories-item">
                        <Neos.Fusion:Tag tagName="a" content={category.label} attributes.rel="tag"
                            attributes.title={q(category).property('title')} @children="attributes.href">
                            <Neos.Neos:NodeUri node={category}/>
                        </Neos.Fusion:Tag>
                    </span>
                </Neos.Fusion:Loop>
            </span>
        `
        @if.hasCategories = ${categories}
    }

    alternativeText = ${q(node).property('alternativeText')}
    entryImage = ${q(node).property('entryImage')}

    previousEntry = ${q(node).prev('[instanceof Shel.Blog:BlogEntry]').get(0)}
    nextEntry = ${q(node).next('[instanceof Shel.Blog:BlogEntry]').get(0)}
}

##
# Add a condition to render the primary content differently if we show a blog entry
#
prototype(Neos.Neos:PrimaryContent).BlogEntry {
    condition = ${q(node).is('[instanceof Shel.Blog:BlogEntry]')}
    type = 'Shel.Blog:BlogEntryContent'
}
