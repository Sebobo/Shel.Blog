##
# "BlogFeed" layout
# We clear the prototype of the BlogFeed so we don't have inherited
# properties we don't want and would be contained in the output.
#
prototype(Shel.Blog:Layout.AtomFeed) >
prototype(Shel.Blog:Layout.AtomFeed) < prototype(Neos.Fusion:Http.Message) {
    httpResponseHead {
        headers.Content-Type = 'application/xml'
    }

    doctype = '<?xml version="1.0" encoding="utf-8"?>'
    doctype.@position = 'start 100'

    feed = Shel.Blog:Component.Feed {
        @position = 'after doctype'
        limit = 0
    }

    // We only want absolute uris in the atom feed
    prototype(Neos.Neos:ConvertUris) {
        absolute = true
    }
}

##
# Calling a page that is not a blog feed with the format .atom will create a redirect
#
atom = Neos.Fusion:Http.Message {
    httpResponseHead.headers {
        Status = '307 Temporary Redirect'
        Location = Neos.Neos:NodeUri {
            node = ${documentNode}
            format = 'html'
        }
    }
}

##
# Calling a page with the format .atom will render the xml feed if it's a blog feed
#
root.shelBlogAtomFeed {
    @position = 'before format'
    condition = ${request.format == 'atom' && q(documentNode).is('[instanceof Shel.Blog:Document.Feed]')}
    renderer = Shel.Blog:Layout.AtomFeed
}
