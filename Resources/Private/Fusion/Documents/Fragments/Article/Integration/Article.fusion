prototype(Shel.Blog:Document.Fragment.Article) < prototype(Neos.Neos:ContentComponent) {
    settings = ${Configuration.setting('Shel.Blog')}
    cldrFormat = ${this.settings.cldrFormat}
    localeFormatLength = ${this.settings.localeFormatLength}
    showAuthor = ${this.settings.showAuthor}

    documentNode = ${documentNode}
    node = ${node}
    identifier = ${node.identifier}

    title = Neos.Neos:Editable {
        property = 'title'
        block = false
    }
    entrySummary = ${q(node).property('entrySummary')}
    categories = ${q(node).property('categories') || []}
    authorName = Neos.Neos:Editable {
        property = 'authorName'
        block = false
    }
    alternativeText = ${q(node).property('alternativeText')}
    entryImage = ${q(node).property('entryImage')}

    rawPublicationDate = ${q(node).property('publicationDate')}
    publicationDate = ${this.rawPublicationDate}
    publicationDate.@process.fallback = ${value != '' && value != null ? value : q(node).property('_lastPublicationDateTime')}
    publicationDate.@process.format = ${Shel.Blog.Format.date(value, 'Y-m-d', 'date', this.localeFormatLength, this.cldrFormat)}

    firstTextNode = ${q(node).children('main').find('[instanceof Neos.Neos:Content][text]').get(0)}

    summary = ${this.entrySummary != '' && this.entrySummary != null ? this.entrySummary  : (this.firstTextNode ? q(this.firstTextNode).property('text') : '')}
    summary.@process {
        stripTags = ${String.stripTags(value)}
        stripTags.@if.live = ${!documentNode.context.inBackend}
        crop = ${String.crop(value, 200, 'â€¦')}
        crop.@if.live = ${!documentNode.context.inBackend}
    }

    articleUri = Neos.Neos:NodeUri {
        node = ${node}
        absolute = true
        format = 'html'
    }

    thumbnailWidth = 1280
    thumbnailHeight = 500
    thumbnailAllowCropping = false
    thumbnailAllowUpScaling = false
    thumbnail = ${Shel.Blog.Asset.createThumbnail(this.entryImage, this.thumbnailWidth, null, this.thumbnailHeight, null, this.thumbnailAllowCropping, this.thumbnailAllowUpScaling)}
    thumbnail.@if.hasAsset = ${this.entryImage}

    renderer = Shel.Blog:Document.Fragment.Article.Presentation {
        title = ${props.title}
        image = Neos.Fusion:ResourceUri {
            resource = ${props.thumbnail.resource}
        }
        alternativeText = ${props.alternativeText}
        articleUri = ${props.articleUri}
        imageWidth = ${props.thumbnail.width}
        imageHeight = ${props.thumbnail.height}
        authorName = ${props.authorName}
        showAuthor = ${props.showAuthor}
        publicationDate = ${props.publicationDate}
        categories = ${props.categories}
        content = Neos.Neos:ContentCollection {
            nodePath = 'main'
        }
    }
}
